# pyproject.toml

[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
package_demo = ["*.json"]
##### ---- The 'project' table was defined in PEP 621 ----

[project]
name = "packaging-demo-himanshu"
authors = [
    {name = "Himanshu Kandpal", email = "himanshukandpal0799@gmail.com"},
]
description = "My package description"
readme = "README.md"
requires-python = ">=3.7"
keywords = ["one", "two"]
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "numpy",
    "fastapi",
]
dynamic = ["version"]
##### ---- End of the 'project' table ----

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]
release = ["build", "twine", "pre-commit"]
static-code-qa = ["pre-commit"]
dev = ["packaging-demo-himanshu[test, release, static-code-qa]"]

[tool.setuptools.dynamic]
version = {file = "version.txt"}

[tool.black]
line-length = 119
exclude = "venv"

[tool.flake8]
docstring-convention = "all"
ignore = [ "D107", "D212", "E501", "W503", "W605", "D203", "D100" ]
exclude = ["venv"]
max-line-length = 99

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 99


[tool.pylint."messages control"]
disable = [
  "line-too-long",
  "trailing-whitespace",
  "missing-function-docstring",
  "consider-using-f-string",
  "import-error",
  "too-few-public-methods",
  "redefined-outer-name"
]

[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
select = ["E", "F", "B", "ERA"]

# Never enforce `E501` (line length violations).
ignore = ["E501", "F401"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

line-length = 99

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
